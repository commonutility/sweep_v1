{"version":3,"file":"PairlistConfigView-JmLLJc41.js","sources":["../../src/types/pairlists.ts","../../src/components/general/CopyableTextfield.vue","../../src/components/ftbot/PairlistConfigParameter.vue","../../src/stores/pairlistConfig.ts","../../src/components/ftbot/PairlistConfigItem.vue","../../src/components/ftbot/PairlistConfigBlacklist.vue","../../src/components/ftbot/PairlistConfigActions.vue","../../src/components/ftbot/PairlistConfigurator.vue"],"sourcesContent":["import type { BackgroundTaskResult } from './backgroundtasks';\nimport type { WhitelistResponse } from './blacklist';\nimport type { ExchangeSelectPayload } from './types';\n\nexport interface PairlistsResponse {\n  pairlists: Pairlist[];\n}\n\nexport interface PairlistEvalResponse extends BackgroundTaskResult {\n  result: WhitelistResponse;\n}\n\nexport interface Pairlist {\n  id?: string;\n  is_pairlist_generator: boolean;\n  name: string;\n  description: string;\n  showParameters: boolean;\n  params: Record<string, PairlistParameter>;\n}\n\nexport interface PairlistConfig {\n  name: string;\n  blacklist: string[];\n  pairlists: Pairlist[];\n}\n\nexport enum PairlistParamType {\n  string = 'string',\n  number = 'number',\n  boolean = 'boolean',\n  option = 'option',\n  list = 'list',\n}\n\nexport type PairlistParamValue = string | number | boolean | string[];\n\ninterface PairlistParameterBase {\n  description: string;\n  help: string;\n  type: PairlistParamType;\n}\n\nexport interface StringPairlistParameter extends PairlistParameterBase {\n  type: PairlistParamType.string;\n  value?: string;\n  default: string;\n}\n\nexport interface NumberPairlistParameter extends PairlistParameterBase {\n  type: PairlistParamType.number;\n  value?: number;\n  default: number;\n}\n\nexport interface BooleanPairlistParameter extends PairlistParameterBase {\n  type: PairlistParamType.boolean;\n  value?: boolean;\n  default: boolean;\n}\n\nexport interface OptionPairlistParameter extends PairlistParameterBase {\n  type: PairlistParamType.option;\n  options: string[];\n  value?: string;\n  default: string;\n}\n\nexport interface ListPairlistParameter extends PairlistParameterBase {\n  type: PairlistParamType.list;\n  value?: string[];\n  default: string;\n}\n\nexport type PairlistParameter =\n  | StringPairlistParameter\n  | NumberPairlistParameter\n  | BooleanPairlistParameter\n  | OptionPairlistParameter\n  | ListPairlistParameter;\n\nexport interface PairlistPayloadItem {\n  method: string;\n  [key: string]: string | number | boolean;\n}\n\nexport interface PairlistsPayload extends ExchangeSelectPayload {\n  pairlists: PairlistPayloadItem[];\n  blacklist: string[];\n  stake_currency: string;\n}\n","<script setup lang=\"ts\">\nimport { useClipboard } from '@vueuse/core';\n\ndefineProps({\n  content: { type: [String, Array<string>], required: true },\n  isValid: { type: Boolean, default: true },\n});\n\nconst { copy, isSupported, copied } = useClipboard();\n</script>\n\n<template>\n  <div class=\"relative group copy-container\">\n    <div\n      class=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 transition-opacity hover:cursor-pointer flex dark:bg-surface-700 bg-surface-200 p-1 rounded-sm items-center justify-center flex-row\"\n      @click=\"copy(typeof content === 'string' ? content : JSON.stringify(content))\"\n    >\n      <span v-if=\"copied\" class=\"text-sm\">Copied!</span>\n      <i-mdi-check-circle v-if=\"isSupported && copied\" />\n      <i-mdi-content-copy v-if=\"!copied && isSupported && isValid\" />\n    </div>\n    <pre\n      class=\"text-start border rounded-sm border-surface-500 p-2 m-0 bg-surface-50 dark:bg-surface-900 overflow-auto\"\n    ><code>{{ content }}</code></pre>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { PairlistParameter } from '@/types';\nimport { PairlistParamType } from '@/types';\n\ndefineProps<{\n  param: PairlistParameter;\n}>();\n\n// TODO: type should really be PairlistParamValue\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst paramValue = defineModel<any>();\n</script>\n\n<template>\n  <div class=\"pb-1 flex flex-row text-start\">\n    <label class=\"w-2/5\"> {{ param.description }}</label>\n    <div class=\"flex flex-col w-full\">\n      <InputText\n        v-if=\"param.type === PairlistParamType.string || param.type === PairlistParamType.number\"\n        v-model=\"paramValue\"\n        size=\"small\"\n      ></InputText>\n\n      <BaseCheckbox\n        v-if=\"param.type === PairlistParamType.boolean\"\n        v-model=\"paramValue\"\n      ></BaseCheckbox>\n\n      <BFormSelect\n        v-if=\"param.type === PairlistParamType.option\"\n        v-model=\"paramValue\"\n        :options=\"param.options\"\n      ></BFormSelect>\n      <BaseStringList\n        v-if=\"param.type === PairlistParamType.list\"\n        v-model=\"paramValue\"\n      ></BaseStringList>\n      <span class=\"text-muted text-sm text-surface-500\">{{ param.help }}</span>\n    </div>\n  </div>\n</template>\n","import { useBotStore } from './ftbotwrapper';\n\nimport type {\n  ExchangeSelection,\n  Pairlist,\n  PairlistConfig,\n  PairlistParamValue,\n  PairlistPayloadItem,\n  PairlistsPayload,\n} from '@/types';\nimport { MarginMode, PairlistParamType, TradingMode } from '@/types';\n\nexport const usePairlistConfigStore = defineStore(\n  'pairlistConfig',\n  () => {\n    const botStore = useBotStore();\n\n    const evaluating = ref<boolean>(false);\n    const intervalId = ref<number>();\n    const stakeCurrency = ref<string>(botStore.activeBot?.stakeCurrency ?? 'USDT');\n    const whitelist = ref<string[]>([]);\n    const customExchange = ref<boolean>(false);\n    const selectedExchange = ref<ExchangeSelection>({\n      exchange: botStore.activeBot?.botState.exchange ?? '',\n      trade_mode: {\n        trading_mode: botStore.activeBot?.botState.trading_mode ?? TradingMode.SPOT,\n        margin_mode:\n          botStore.activeBot?.botState.trading_mode === TradingMode.FUTURES\n            ? MarginMode.ISOLATED\n            : MarginMode.NONE,\n      },\n    });\n\n    const config = ref<PairlistConfig>(makeConfig());\n    const savedConfigs = ref<PairlistConfig[]>([]);\n    const configName = ref<string>('');\n\n    const firstPairlistIsGenerator = computed<boolean>(() => {\n      // First pairlist must be a generator\n      if (config.value.pairlists[0]?.is_pairlist_generator) {\n        return true;\n      }\n      return false;\n    });\n\n    const pairlistValid = computed<boolean>(() => {\n      return firstPairlistIsGenerator.value && config.value.pairlists.length > 0;\n    });\n\n    const configJSON = computed(() => {\n      return JSON.stringify(configToPayloadItems(), null, 2);\n    });\n\n    const isSavedConfig = (name: string) =>\n      savedConfigs.value.findIndex((c) => c.name === name) > -1;\n\n    function addToConfig(pairlist: Pairlist, index: number) {\n      pairlist = structuredClone(toRaw(pairlist));\n      pairlist.showParameters = false;\n      if (!pairlist.id) {\n        pairlist.id = Date.now().toString(36) + Math.random().toString(36).substring(2);\n      }\n      for (const param in pairlist.params) {\n        pairlist.params[param].value = isNotUndefined(pairlist.params[param].default)\n          ? pairlist.params[param].default\n          : '';\n      }\n      config.value.pairlists.splice(index, 0, pairlist);\n    }\n\n    function removeFromConfig(index: number) {\n      config.value.pairlists.splice(index, 1);\n    }\n\n    function saveConfig(name = '') {\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\n      config.value.name = name;\n\n      if (i > -1) {\n        savedConfigs.value[i] = structuredClone(toRaw(config.value));\n      } else {\n        savedConfigs.value.push(structuredClone(toRaw(config.value)));\n      }\n    }\n\n    function newConfig(name: string) {\n      const c = makeConfig({ name });\n      savedConfigs.value.push(c);\n      config.value = structuredClone(c);\n    }\n\n    function duplicateConfig(name = '') {\n      const c = makeConfig({\n        name,\n        pairlists: toRaw(config.value.pairlists) as [],\n        blacklist: toRaw(config.value.blacklist) as [],\n      });\n      savedConfigs.value.push(c);\n      config.value = structuredClone(c);\n    }\n\n    function deleteConfig() {\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\n      if (i > -1) {\n        savedConfigs.value.splice(i, 1);\n        selectOrCreateConfig(\n          savedConfigs.value.length > 0 ? savedConfigs.value[0].name : 'default',\n        );\n      }\n    }\n\n    function selectOrCreateConfig(name: string) {\n      const c = savedConfigs.value.find((c) => name === c.name);\n      if (c) {\n        config.value = structuredClone(toRaw(c));\n      } else {\n        newConfig(name);\n      }\n    }\n\n    function makeConfig({ name = '', pairlists = [], blacklist = [] } = {}): PairlistConfig {\n      return { name, pairlists, blacklist };\n    }\n\n    function addToBlacklist() {\n      config.value.blacklist.push('');\n    }\n\n    function removeFromBlacklist(index: number) {\n      config.value.blacklist.splice(index, 1);\n    }\n\n    function duplicateBlacklist(configName: string) {\n      const conf = savedConfigs.value.find((c) => c.name === configName);\n      if (conf) {\n        config.value.blacklist = structuredClone(toRaw(conf.blacklist));\n      }\n    }\n\n    async function startPairlistEvaluation() {\n      const payload: PairlistsPayload = configToPayload();\n\n      evaluating.value = true;\n      try {\n        const { job_id: jobId } = await botStore.activeBot.evaluatePairlist(payload);\n        console.log('jobId', jobId);\n\n        intervalId.value = window.setInterval(async () => {\n          const res = await botStore.activeBot.getBackgroundJobStatus(jobId);\n          if (!res.running) {\n            clearInterval(intervalId.value);\n            const wl = await botStore.activeBot.getPairlistEvalResult(jobId);\n            evaluating.value = false;\n            if (wl.status === 'success') {\n              whitelist.value = wl.result.whitelist;\n            } else if (wl.error) {\n              showAlert(wl.error, 'error');\n              evaluating.value = false;\n            }\n          }\n        }, 1000);\n      } catch (error) {\n        showAlert('Evaluation failed', 'error');\n        evaluating.value = false;\n      }\n    }\n\n    function convertToParamType(type: PairlistParamType, value: PairlistParamValue) {\n      if (type === PairlistParamType.number) {\n        return Number(value);\n      } else if (type === PairlistParamType.boolean) {\n        return Boolean(value);\n      } else if (type === PairlistParamType.list) {\n        return value as string[];\n      } else {\n        return String(value);\n      }\n    }\n\n    function configToPayload(): PairlistsPayload {\n      const pairlists: PairlistPayloadItem[] = configToPayloadItems();\n      const c: PairlistsPayload = {\n        pairlists: pairlists,\n        stake_currency: stakeCurrency.value,\n        blacklist: config.value.blacklist,\n      };\n      if (customExchange.value) {\n        console.log('setting custom exchange props');\n        c.exchange = selectedExchange.value.exchange;\n        c.trading_mode = selectedExchange.value.trade_mode.trading_mode;\n        c.margin_mode = selectedExchange.value.trade_mode.margin_mode;\n      }\n      return c;\n    }\n\n    function configToPayloadItems() {\n      const pairlists: PairlistPayloadItem[] = [];\n      config.value.pairlists.forEach((config) => {\n        const pairlist = {\n          method: config.name,\n        };\n        for (const key in config.params) {\n          const param = config.params[key];\n          if (param.value) {\n            pairlist[key] = convertToParamType(param.type, param.value);\n          }\n        }\n        pairlists.push(pairlist);\n      });\n\n      return pairlists;\n    }\n\n    watch(\n      () => config.value,\n      () => {\n        configName.value = config.value.name;\n      },\n      {\n        deep: true,\n      },\n    );\n\n    return {\n      evaluating,\n      whitelist,\n      config,\n      configJSON,\n      savedConfigs,\n      configName,\n      startPairlistEvaluation,\n      addToConfig,\n      removeFromConfig,\n      saveConfig,\n      duplicateConfig,\n      deleteConfig,\n      newConfig,\n      selectOrCreateConfig,\n      addToBlacklist,\n      removeFromBlacklist,\n      duplicateBlacklist,\n      isSavedConfig,\n      firstPairlistIsGenerator,\n      pairlistValid,\n      stakeCurrency,\n      customExchange,\n      selectedExchange,\n    };\n  },\n  {\n    persist: {\n      key: 'ftPairlistConfig',\n      pick: ['savedConfigs', 'configName'],\n    },\n  },\n);\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(usePairlistConfigStore, import.meta.hot));\n}\n","<script setup lang=\"ts\">\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\nimport type { Pairlist } from '@/types';\n\nconst pairlistStore = usePairlistConfigStore();\n\ndefineProps<{\n  index: number;\n}>();\n\nconst pairlist = defineModel<Pairlist>({ required: true });\n\nconst hasParameters = computed(() => Object.keys(pairlist.value.params).length > 0);\n\nfunction toggleVisible() {\n  if (hasParameters.value) {\n    pairlist.value.showParameters = !pairlist.value.showParameters;\n  }\n}\n</script>\n\n<template>\n  <div class=\"shadow-sm rounded-sm border border-surface-300 dark:border-surface-700\">\n    <div\n      class=\"flex w-full text-start items-center bg-surface-200 dark:bg-surface-700 p-2 border-b border-surface-300 dark:border-surface-600\"\n    >\n      <div class=\"flex grow items-center\">\n        <i-mdi-reorder-horizontal\n          role=\"button\"\n          class=\"handle me-2 ms-2 shrink\"\n          width=\"24\"\n          height=\"24\"\n        />\n        <div\n          role=\"button\"\n          class=\"flex grow items-start flex-col user-select-none\"\n          @click=\"toggleVisible\"\n        >\n          <span class=\"font-bold\">{{ pairlist.name }}</span>\n          <span class=\"text-sm\">{{ pairlist.description }}</span>\n        </div>\n      </div>\n      <i-mdi-close\n        role=\"button\"\n        width=\"24\"\n        height=\"24\"\n        class=\"mx-2\"\n        @click=\"pairlistStore.removeFromConfig(index)\"\n      />\n      <i-mdi-chevron-down\n        v-if=\"!pairlist.showParameters\"\n        :class=\"hasParameters && !pairlist.showParameters ? 'visible' : 'invisible'\"\n        role=\"button\"\n        class=\"fs-4\"\n        @click=\"toggleVisible\"\n      />\n      <i-mdi-chevron-up\n        v-if=\"pairlist.showParameters\"\n        :class=\"hasParameters && pairlist.showParameters ? 'visible' : 'invisible'\"\n        role=\"button\"\n        class=\"fs-4\"\n        @click=\"toggleVisible\"\n      />\n    </div>\n    <Transition>\n      <div v-if=\"pairlist.showParameters\" class=\"p-2\">\n        <PairlistConfigParameter\n          v-for=\"(parameter, key) in pairlist.params\"\n          :key=\"key\"\n          v-model=\"pairlist.params[key].value\"\n          :param=\"parameter\"\n        />\n      </div>\n    </Transition>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\nconst pairlistStore = usePairlistConfigStore();\nconst copyFromConfig = ref('');\n\nconst configNames = computed(() =>\n  pairlistStore.savedConfigs.filter((c) => c.name !== pairlistStore.config.name).map((c) => c.name),\n);\n</script>\n<template>\n  <Panel toggleable header=\"Blacklist\" collapsed>\n    <div class=\"flex mb-4 items-center gap-2\">\n      <span class=\"col-auto\">Copy from:</span>\n      <Select v-model=\"copyFromConfig\" size=\"small\" class=\"grow\" :options=\"configNames\" />\n      <Button\n        title=\"Copy\"\n        size=\"small\"\n        severity=\"secondary\"\n        @click=\"pairlistStore.duplicateBlacklist(copyFromConfig)\"\n      >\n        <template #icon>\n          <i-mdi-content-copy />\n        </template>\n      </Button>\n    </div>\n    <InputGroup v-for=\"(item, i) in pairlistStore.config.blacklist\" :key=\"i\" class=\"mb-2\" size=\"sm\">\n      <InputText v-model=\"pairlistStore.config.blacklist[i]\" size=\"small\" />\n      <InputGroupAddon>\n        <Button size=\"small\" severity=\"secondary\" @click=\"pairlistStore.removeFromBlacklist(i)\">\n          <template #icon>\n            <i-mdi-close />\n          </template>\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n    <Button size=\"small\" @click=\"pairlistStore.addToBlacklist()\">Add</Button>\n  </Panel>\n</template>\n","<script setup lang=\"ts\">\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\nimport EditValue from '../general/EditValue.vue';\nconst pairlistStore = usePairlistConfigStore();\n</script>\n<template>\n  <div class=\"flex flex-col sm:flex-row mb-2 gap-2\">\n    <Button\n      title=\"Save configuration\"\n      size=\"small\"\n      severity=\"primary\"\n      @click=\"pairlistStore.saveConfig(pairlistStore.config.name)\"\n    >\n      <i-mdi-content-save />\n    </Button>\n    <EditValue\n      v-model=\"pairlistStore.config.name\"\n      editable-name=\"config\"\n      :allow-add=\"true\"\n      :allow-duplicate=\"true\"\n      :allow-edit=\"true\"\n      class=\"flex grow\"\n      @delete=\"pairlistStore.deleteConfig\"\n      @duplicate=\"(oldName: string, newName: string) => pairlistStore.duplicateConfig(newName)\"\n      @new=\"(name: string) => pairlistStore.newConfig(name)\"\n      @rename=\"(oldName: string, newName: string) => pairlistStore.saveConfig(newName)\"\n    >\n      <Select\n        v-model=\"pairlistStore.configName\"\n        size=\"small\"\n        class=\"w-full text-start\"\n        :options=\"pairlistStore.savedConfigs.map((c) => c.name)\"\n        @update:model-value=\"(config) => pairlistStore.selectOrCreateConfig(config as string)\"\n      />\n    </EditValue>\n    <Button\n      title=\"Evaluate pairlist\"\n      :disabled=\"pairlistStore.evaluating || !pairlistStore.pairlistValid\"\n      severity=\"primary\"\n      class=\"px-5\"\n      size=\"small\"\n      @click=\"pairlistStore.startPairlistEvaluation()\"\n    >\n      <ProgressSpinner v-if=\"pairlistStore.evaluating\" class=\"h-5 w-5\"></ProgressSpinner>\n      <span v-else>Evaluate</span>\n    </Button>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport type { Pairlist } from '@/types';\nimport { useSortable, moveArrayElement } from '@vueuse/integrations/useSortable';\n\nconst botStore = useBotStore();\nconst pairlistStore = usePairlistConfigStore();\n\nconst availablePairlists = ref<Pairlist[]>([]);\nconst pairlistConfigsEl = ref<HTMLElement | null>(null);\nconst availablePairlistsEl = ref<HTMLElement | null>(null);\nconst selectedView = ref<'Config' | 'Results'>('Config');\n\nconst configEmpty = computed(() => {\n  return pairlistStore.config.pairlists.length == 0;\n});\n\nuseSortable(availablePairlistsEl, availablePairlists.value, {\n  group: {\n    name: 'configurator',\n    pull: 'clone',\n    put: false,\n  },\n  sort: false,\n  filter: '.no-drag',\n  dragClass: 'dragging',\n});\n\nuseSortable(pairlistConfigsEl, pairlistStore.config.pairlists, {\n  handle: '.handle',\n  group: 'configurator',\n  onUpdate: async (e) => {\n    moveArrayElement(pairlistStore.config.pairlists, e.oldIndex, e.newIndex);\n  },\n  onAdd: (e) => {\n    const pairlist = availablePairlists.value[e.oldIndex];\n    pairlistStore.addToConfig(pairlist, e.newIndex);\n    // quick fix from: https://github.com/SortableJS/Sortable/issues/1515\n    e.clone.replaceWith(e.item);\n    e.clone.remove();\n  },\n});\n\nonMounted(async () => {\n  availablePairlists.value = (await botStore.activeBot.getPairlists()).pairlists.sort((a, b) =>\n    // Sort by is_pairlist_generator (by name), then by name.\n    // TODO: this might need to be improved\n    a.is_pairlist_generator === b.is_pairlist_generator\n      ? a.name.localeCompare(b.name)\n      : a.is_pairlist_generator\n        ? -1\n        : 1,\n  );\n  pairlistStore.selectOrCreateConfig(\n    pairlistStore.isSavedConfig(pairlistStore.configName) ? pairlistStore.configName : 'default',\n  );\n});\n\nwatch(\n  () => pairlistStore.whitelist,\n  () => {\n    selectedView.value = 'Results';\n  },\n);\n</script>\n\n<template>\n  <div class=\"flex px-3 mb-3 gap-3 flex-col lg:flex-row\">\n    <ul\n      ref=\"availablePairlistsEl\"\n      class=\"divide-y border-x border-surface-500 rounded-sm border-y divide-solid divide-surface-500\"\n    >\n      <li\n        v-for=\"pairlist in availablePairlists\"\n        :key=\"pairlist.name\"\n        :class=\"{\n          'no-drag text-gray-500 hover:cursor-default':\n            pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator,\n        }\"\n        class=\"pairlist flex text-start items-center py-2 px-3 hover:cursor-grab\"\n      >\n        <div class=\"flex grow items-start flex-col\">\n          <span class=\"font-bold\">{{ pairlist.name }}</span>\n          <span class=\"text-sm text-muted-color\">{{ pairlist.description }}</span>\n        </div>\n        <Button\n          severity=\"secondary\"\n          class=\"dark:text-white\"\n          variant=\"text\"\n          :disabled=\"pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator\"\n          @click=\"pairlistStore.addToConfig(pairlist, pairlistStore.config.pairlists.length)\"\n        >\n          <template #icon>\n            <i-mdi-arrow-right-bold-box-outline />\n          </template>\n        </Button>\n      </li>\n    </ul>\n    <div class=\"flex flex-col grow\">\n      <PairlistConfigActions />\n      <div class=\"border rounded-sm border-surface-500 p-2 mb-2\">\n        <div class=\"flex items-center gap-2 my-2\">\n          <span class=\"col-auto\">Stake currency: </span>\n          <InputText v-model=\"pairlistStore.stakeCurrency\" size=\"small\" />\n        </div>\n\n        <div class=\"mb-2 border rounded-sm border-surface-500 p-2 text-start\">\n          <BaseCheckbox v-model=\"pairlistStore.customExchange\" class=\"mb-2\">\n            Custom Exchange\n          </BaseCheckbox>\n          <Transition name=\"fade\">\n            <ExchangeSelect\n              v-if=\"pairlistStore.customExchange\"\n              v-model=\"pairlistStore.selectedExchange\"\n            />\n          </Transition>\n        </div>\n      </div>\n      <PairlistConfigBlacklist />\n      <Message\n        v-if=\"pairlistStore.config.pairlists.length > 0 && !pairlistStore.firstPairlistIsGenerator\"\n        class=\"my-2\"\n        severity=\"warn\"\n      >\n        First entry in the pairlist must be a Generating pairlist, like StaticPairList or\n        VolumePairList.\n      </Message>\n      <div\n        ref=\"pairlistConfigsEl\"\n        class=\"flex flex-col grow relative border rounded-sm border-surface-500 p-1 gap-2\"\n        :class=\"{ empty: configEmpty }\"\n      >\n        <PairlistConfigItem\n          v-for=\"(pairlist, i) in pairlistStore.config.pairlists\"\n          :key=\"pairlist.id\"\n          v-model=\"pairlistStore.config.pairlists[i]\"\n          :index=\"i\"\n          @remove=\"pairlistStore.removeFromConfig\"\n        />\n      </div>\n    </div>\n    <div class=\"flex flex-col w-full lg:w-3/12\">\n      <SelectButton\n        v-model=\"selectedView\"\n        class=\"mb-2\"\n        size=\"small\"\n        :allow-empty=\"false\"\n        option-label=\"value\"\n        option-value=\"value\"\n        :options=\"[\n          { value: 'Config' },\n          { value: 'Results', disabled: pairlistStore.whitelist.length === 0 },\n        ]\"\n        option-disabled=\"disabled\"\n      >\n        <!-- TODO primevue: Fix selectButton \"disabled\" state-->\n      </SelectButton>\n      <div class=\"relative overflow-auto\">\n        <CopyableTextfield\n          v-if=\"selectedView === 'Config'\"\n          class=\"lg:a22bsolute w-full\"\n          :content=\"pairlistStore.configJSON\"\n          :is-valid=\"pairlistStore.pairlistValid\"\n        />\n        <CopyableTextfield\n          v-if=\"selectedView === 'Results'\"\n          class=\"lg:abs22olute w-full\"\n          :content=\"pairlistStore.whitelist\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"css\" scoped>\n@reference '../../styles/tailwind.css';\n\n.pairlist.dragging {\n  @apply border-white border bg-white dark:bg-black;\n  /* border: 1px solid white; */\n  /* border-radius: 0; */\n}\n\n.empty:after {\n  content: 'Drag pairlist here';\n  position: absolute;\n  align-self: center;\n  font-size: 1.1rem;\n  text-transform: uppercase;\n  line-height: 0;\n  top: 50%;\n}\n</style>\n"],"names":["PairlistParamType","copy","isSupported","copied","useClipboard","paramValue","_useModel","__props","usePairlistConfigStore","defineStore","botStore","useBotStore","evaluating","ref","intervalId","stakeCurrency","_a","whitelist","customExchange","selectedExchange","_b","_c","TradingMode","_d","MarginMode","config","makeConfig","savedConfigs","configName","firstPairlistIsGenerator","computed","pairlistValid","configJSON","configToPayloadItems","isSavedConfig","name","c","addToConfig","pairlist","index","toRaw","param","isNotUndefined","removeFromConfig","saveConfig","i","newConfig","duplicateConfig","deleteConfig","selectOrCreateConfig","pairlists","blacklist","addToBlacklist","removeFromBlacklist","duplicateBlacklist","conf","startPairlistEvaluation","payload","configToPayload","jobId","wl","showAlert","convertToParamType","type","value","key","watch","pairlistStore","hasParameters","toggleVisible","copyFromConfig","configNames","availablePairlists","pairlistConfigsEl","availablePairlistsEl","selectedView","configEmpty","useSortable","e","moveArrayElement","onMounted","a","b"],"mappings":"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"}